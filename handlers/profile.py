from aiogram import Router, types
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, ReplyKeyboardRemove
from services.database import get_user_profile, update_last_activity, update_user_state
from aiogram.fsm.state import State, StatesGroup
from handlers.start import start_command
from handlers.menu import show_menu
from aiogram.fsm.context import FSMContext

router = Router()

class ProfileState(StatesGroup):
    main_profile_state = State()
    waiting_for_game_number = State()
    waiting_for_rating_change = State()
    waiting_for_new_rating = State()
    waiting_for_not_interested_game_number = State()



@router.message(lambda msg: msg.text == "üéÆ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
@router.callback_query(lambda c: c.data == "back_to_profile")
async def show_profile(event: Message | CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"""
    user_id = event.from_user.id
    update_last_activity(user_id)
    update_user_state(user_id, "Profile")
    user_data = get_user_profile(user_id)
    await state.set_state(ProfileState.main_profile_state)

    if user_data:
        text = (
            "*–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç* \n\n"
            f"üíæ *–ò–º—è:* {event.from_user.full_name}\n"
            f"üéÆ *–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:* {user_data['platform']}\n"
            f"üî• *–õ—é–±–∏–º—ã–π –∂–∞–Ω—Ä:* {user_data['genre']}\n"
            f"üåü *–õ—é–±–∏–º—ã–µ –∏–≥—Ä—ã:* {user_data['favorite_games']}"
        )

        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚≠ê –û—Ü–µ–Ω–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã", callback_data="rated_games")],
            [InlineKeyboardButton(text="‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data="favorites")],
            [InlineKeyboardButton(text="üö´ –ù–µ–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏–≥—Ä—ã", callback_data="not_interested")],
            [InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É", callback_data="edit_survey")],
            [InlineKeyboardButton(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
        ])

        if isinstance(event, Message):
            await event.bot.send_message(event.chat.id, "üîÑ –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å, —Å–µ–∫—É–Ω–¥—É...",
                                         reply_markup=ReplyKeyboardRemove())
            await event.bot.send_message(event.chat.id, text, reply_markup=keyboard, parse_mode="Markdown")

        elif isinstance(event, CallbackQuery):
            await event.message.edit_text(text, reply_markup=keyboard, parse_mode="Markdown")
    else:
        await event.answer("‚ùå –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç—ã. –ü—Ä–æ–π–¥–∏—Ç–µ –∞–Ω–∫–µ—Ç—É!")

@router.callback_query(lambda c: c.data == "edit_survey")
async def edit_survey(callback: CallbackQuery, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö."""
    user_id = callback.from_user.id
    update_last_activity(user_id)
    user_info = get_user_profile(user_id)

    if user_info:
        from handlers.start import user_data
        user_data[user_id] = {
            "platform": user_info["platform"],
            "genre": user_info["genre"],
            "games": user_info["favorite_games"]
        }

    await start_command(callback.message, state, edit=True)

@router.callback_query(lambda c: c.data == "back_to_menu")
async def back_to_menu(callback: CallbackQuery, state: FSMContext):
    """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    await state.clear()
    await callback.message.delete()
    await show_menu(callback.message)

def register_handlers(dp):
    dp.include_router(router)
